pipeline {

    agent any

    tools {
           nodejs "20.11.1"
	   gradle "8.0.2"
     }

    environment {
        // PATH='C://Program Files//nodejs;c:\\Windows\\System32' 
	PATH='/Users/awc-110812/bin:/usr/bin:/bin:/Users/awc-110812/Documents/jdk-17.0.10.jdk/Contents/Home/bin:/Users/awc-110812/Library/Android/sdk/tools:/Users/awc-110812/Library/Android/sdk/platform-tools/bin'
ANDROID_HOME='/Users/awc-110812/Library/Android/sdk/bin'
export JAVA_HOME=/Users/awc-110812/Documents/jdk-17.0.10.jdk/Contents/Home/bin
export PATH=${JAVA_HOME}/bin:$PATH
export ANDROID_HOME=/Users/awc-110812/Library/Android/sdk
export PATH=$ANDROID_HOME/platform-tools:$PATH
export PATH=$ANDROID_HOME/tools:$PATH
export ANDROID_SDK_ROOT=$ANDROID_HOME
export PATH=$PATH:$ANDROID_SDK_ROOT/tools/bin

     }

    stages {

 	stage('NPM Install') {
         steps {
            echo 'execute cmd ...'
            sh 'npm install'
          }
      	}

 	stage('Stage Web Build') {
          steps {
	      echo 'Running Web Build'
              sh 'npm run build'
          }
      	}

	stage('Sync') {
  	   steps {
		echo 'Syncing files to each platforms'
 		sh 'npx cap sync'
	  }
      	}


 	stage('IOS Build') {
          steps {
             // sh 'npx ionic build ios --release'
             echo "iOS"
             // bat "npx ionic build --debug"

          }
       	}

	stage('Android Build') {
          steps {
            // sh 'npx cap build android'
             echo "Android"

  echo "My 'PATH'   environment variable: '${env.ANDROID_HOME}'"

             sh 'cd android && bash ./gradlew clean assembleDebug && cd..'
          }
       	}
}
}


